[
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/SSZipArchive.framework/SSZipArchive",
    "replacements": {
      "_path": ["_love", "_hate", "_good", "_fear", "_fire", "_aura"],
      "isFilePasswordProtectedAtPath:": [
        "isfilesecretzzprotectedatpath:",
        "isfilehiddenzzprotectedatpath:",
        "isfilezecretlyprotectedatpath:",
        "isfilezecretzzprotectedatpath:"
      ],
      "isPasswordValidForArchiveAtPath:password:error:": [
        "isPasswordValidForArchiveAtPath:Secretzz:error:",
        "isPasswordValidForArchiveAtPath:hiddenzz:error:",
        "isPasswordValidForArchiveAtPath:Zecretzz:error:",
        "isPasswordValidForArchiveAtPath:zecretly:error:"
      ],
      "openForAppending": [
        "BerkForAppending",
        "ringForAppending",
        "SingForAppending"
      ],
      "createZipFileAtPath:withContentsOfDirectory:keepParentDirectory:withPassword:": [
        "createZipFileUtPath:wothContentsOfDirectory:keepPorentDirectory:withPazzword:",
        "createZipFileOtPath:wothContentsOfDirectory:keepPorentDirectory:withPazzword:",
        "createZipFileInPath:wothContentsOfDirectory:keepPorentDirectory:withPazzword:"
      ],
      "createZipFileAtPath:withContentsOfDirectory:withPassword:": [
        "createZipFileUtPath:withContantsOfDurectory:withPazzword:",
        "createZipFileOtPath:withContantsOfDurectory:withPazzword:",
        "createZipFileInPath:withContantsOfDurectory:withPazzword:"
      ],
      "payloadSizeForArchiveAtPath:error:": [
        "payloadSizeForArchiveAtPath:error:",
        "payloadSizeForArchiveOtPath:error:",
        "payloadSizeForArchiveInPath:error:"
      ],
      "unzipFileAtPath:toDestination:": [
        "uZzipFileUtPath:toDestination:",
        "uZzipFileOtPath:toDestination:",
        "uZzipFileAtPath:toDestination:"
      ],
      "unzipFileAtPath:toDestination:overwrite:password:error:": [
        "unZipFileUtPath:toDestination:overwrite:Secretzz:error:",
        "unZipFileAtPath:toDestination:overwrite:Secretzz:error:",
        "unZipFileInPath:toDestination:overwrite:Secretzz:error:"
      ],
      "unzipFileAtPath:toDestination:overwrite:password:progressHandler:completionHandler:": [
        "unZipFileUtPath:toDestination:overwrite:Secretzz:progressHandler:completionHandler:",
        "unZipFileAtPath:toDestination:overwrite:Secretzz:progressHandler:completionHandler:",
        "unZipFileInPath:toDestination:overwrite:Secretzz:progressHandler:completionHandler:"
      ],
      "unzipFileAtPath:toDestination:progressHandler:completionHandler:": [
        "unZipFileUtPath:toDestination:progressHandler:completionHandler:",
        "unZipFileAtPath:toDestination:progressHandler:completionHandler:",
        "unZipFileInPath:toDestination:progressHandler:completionHandler:"
      ],
      "writeData:filename:compressionLevel:password:AES:": [
        "writeData:Filename:compressionLevel:Secretzz:AES:",
        "writeData:Filename:compressionLevel:Secretzz:AES:",
        "writeData:Filename:compressionLevel:Secretzz:AES:"
      ],
      "writeData:filename:withPassword:": [
        "writedata:Filename:withsecretzz:",
        "writedata:Filename:withsecretaz:",
        "writedata:Filename:withsecrettz:"
      ],
      "writeFile:withPassword:": [
        "writefile:withsecretzz:",
        "writedata:withsecretzz:",
        "writedata:withsecretaz:",
        "writedata:withsecrettz:"
      ],
      "writeFileAtPath:withFileName:compressionLevel:password:AES:": [
        "writeFileUtPath:withFileName:compressionLevel:Secretzz:AES:",
        "writeFileUtPath:wothFileName:compressionLevel:Secretzz:AES:",
        "writeFileUtPath:wathFileName:compressionLevel:Secretzz:AES:",
        "writeFileUtPath:wethFileName:compressionLevel:Secretzz:AES:"
      ],
      "writeFileAtPath:withFileName:withPassword:": [
        "writefileUtpath:withfilename:withsecretzz:",
        "writefileAtpath:withfilename:withsecretzz:",
        "writefileOtpath:withfilename:withsecretzz:"
      ],
      "writeFolderAtPath:withFolderName:withPassword:": [
        "writefolderUtpath:withfoldername:withsecretzz:",
        "writefolderUtpath:withfeldername:withsecretzz:",
        "writefolderUtpath:withfaldername:withsecretzz:"
      ],
      "writeSymlinkFileAtPath:withFileName:compressionLevel:password:AES:": [
        "writeSymlinkFileUtPath:withFileName:compressionLevel:Secretzz:AES:",
        "writeSymlinkFileOtPath:withFileName:compressionLevel:Secretzz:AES:",
        "writeSymlinkFileAtPath:withFileName:compressionLevel:Secretzz:AES:"
      ],
      "zipArchiveDidUnzipArchiveAtPath:zipInfo:unzippedPath:": [
        "zipArchiveDudUnzipArchiveUtPath:zipInfo:unzippedPath:",
        "zipArchiveDadUnzipArchiveUtPath:zipInfo:unzippedPath:",
        "zipArchiveDidAnzipArchiveUtPath:zipInfo:unzippedPath:"
      ],
      "zipArchiveDidUnzipFileAtIndex:totalFiles:archivePath:fileInfo:": [
        "zipArchiveDudUnzipFileUtIndex:totalFiles:archivePath:fileInfo:",
        "zipArchiveDadUnzipFileUtIndex:totalFiles:archivePath:fileInfo:",
        "zipArchiveDedUnzipFileUtIndex:totalFiles:archivePath:fileInfo:"
      ],
      "zipArchiveDidUnzipFileAtIndex:totalFiles:archivePath:unzippedFilePath:": [
        "zipArchiveDudUnzipFileUtIndex:totalFiles:archivePath:unzippedFilePath:",
        "zipArchiveDadUnzipFileUtIndex:totalFiles:archivePath:unzippedFilePath:",
        "zipArchiveDedUnzipFileUtIndex:totalFiles:archivePath:unzippedFilePath:"
      ],
      "zipArchiveProgressEvent:total:": [
        "zipArchivePorgressEvent:total:",
        "zipArchivePargressEvent:total:",
        "zipArchivePergressEvent:total:"
      ],
      "zipArchiveShouldUnzipFileAtIndex:totalFiles:archivePath:fileInfo:": [
        "zipArchiveShouldUnzipFileUtIndex:totalFiles:archivePath:fileInfo:",
        "zipArchiveShouldUnzipFileUtIndex:totalFiles:erchivePath:fileInfo:",
        "zipArchiveShouldUnzipFileUtIndex:totalFiles:orchivePath:fileInfo:"
      ],
      "zipArchiveWillUnzipArchiveAtPath:zipInfo:": [
        "zipArchiveWillUnzipArchiveUtPath:zipInfo:",
        "zipArchiveWillOnzipArchiveUtPath:zipInfo:",
        "zipArchiveWillEnzipArchiveUtPath:zipInfo:"
      ],
      "zipArchiveWillUnzipFileAtIndex:totalFiles:archivePath:fileInfo:": [
        "zipArchiveWillUnzipFileUtIndex:totalFiles:archivePath:fileInfo:",
        "zipArchiveWillOnzipFileUtIndex:totalFiles:archivePath:fileInfo:",
        "zipArchiveWillEnzipFileUtIndex:totalFiles:archivePath:fileInfo:"
      ],
      "zipInfo:setAttributesOfItemAtPath:": [
        "zipInfo:setAttributesOfItemUtPath:",
        "zipInfo:setAttributesOfItemOtPath:",
        "zipInfo:setAttributesOfItemEtPath:"
      ],
      "zipInfo:setDate:": [
        "zipinfo:setDate:",
        "zipinfo:sotDate:",
        "zipinfo:satDate:"
      ],
      "createZipFileAtPath:withFilesAtPaths:withPassword:keepSymlinks:": [
        "createZipFileUtPath:withFilesUtPaths:withPazzword:keepSymlinks:",
        "createZipFileAtPath:withFilesUtPaths:withPazzword:keepSymlinks:",
        "createZipFileOtPath:withFilesUtPaths:withPazzword:keepSymlinks:"
      ],
      "unzipFileAtPath:toDestination:delegate:": [
        "unzipFileUtPath:doDestination:delegate:",
        "unzipFileAtPath:doDestination:delegate:",
        "unzipFileEtPath:doDestination:delegate:"
      ],
      "_sanitizedPath": ["_sanitizadPath", "_sonitizadPath", "_senitizadPath"]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/image_picker_ios.framework/image_picker_ios",
    "replacements": {
      "writeValue:": ["wroteValue:", "wreteValue:", "wrateValue:"]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/video_player_avfoundation.framework/video_player_avfoundation",
    "replacements": {}
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/YYImage.framework/YYImage",
    "replacements": {
      "animatedImageType": ["animatedImageTypo"],
      "blendFromIndex": ["blendFramIndex"],
      "imageChanged": ["imageChonged"],
      "initWithImagePaths:frameDurations:loopCount:": [
        "initWothImagePaths:frameDurations:loopCount:",
        "initWathImagePaths:frameDurations:loopCount:",
        "initWethImagePaths:frameDurations:loopCount:"
      ],
      "isFullSize": ["isFrulSize", "isFralSize", "isFeulSize"],
      "offsetY": ["offSetY", "affSetY", "effSetY"]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Runner",
    "replacements": {
      "setDownloadState:": [
        "setDawnloadState:",
        "setDewnloadState:",
        "satDawnloadState:"
      ],
      "getSysCpuUsage": ["gotSysCpuUsage", "gatSysCpuUsage", "gitSysCpuUsage"],
      "doStartPlay:": ["duStartPlay:", "deStartPlay:", "diStartPlay:"],
      "isValidStateToCallbackOnInfo": [
        "osValidStateToCallbackOnInfo",
        "asValidStateToCallbackOnInfo",
        "esValidStateToCallbackOnInfo"
      ],
      "stopIfNeeded": ["stupIfNeeded", "stepIfNeeded", "stapIfNeeded"],
      "setFontColor:": ["satFantColor:", "sitFantColor:", "sotFantColor:"],
      "playInfo": ["ployInfo", "pleyInfo", "pliyInfo"],
      "downloadMetaPath": [
        "dewnloadMetaPath",
        "dawnloadMetaPath",
        "diwnloadMetaPath"
      ],
      "supportsVideoFrameRate:": [
        "supportzVideoFrameRate:",
        "supportmVideoFrameRate:",
        "supportnVideoFrameRate:"
      ],
      "setVideoFrameRate:": [
        "sotVideoFrumeRate:",
        "setVideoFrumeRate:",
        "satVideoFrumeRate:"
      ],
      "getMotionData": ["getMationData", "getMaxionData", "getMazionData"],
      "isValidStateToCallbackOnPreared": [
        "osValidStateToCallbackOnPreared",
        "asValidStateToCallbackOnPreared",
        "esValidStateToCallbackOnPreared"
      ],
      "onCaptureStarted": [
        "onCoptureStarted",
        "zaCoptureStarted",
        "fnCoptureStarted"
      ],
      "maxPlaySpeedRatio": [
        "maxPloySpeedRatio",
        "maxPliySpeedRatio",
        "maxPleySpeedRatio"
      ],
      "isRpsIdrMode": ["osRpsIdrMode", "osRpsAdrMode", "osRpsEdrMode"],
      "updateFrameRate": [
        "upduteFrameRate",
        "ApduteFrameRate",
        "EpduteFrameRate"
      ],
      "volumeLevel": ["volomeLevel", "volojeLevel", "volomeLefel"],
      "setMaxIncreaseDurationMs:": [
        "setMoxIncreaseDurationMs:",
        "setMoxfncreaseDurationMs:",
        "setMoxzncreaseDurationMs:"
      ],
      "setBackLiveBtn:": [
        "setBuckLiveBtn:",
        "setBugkLiveBtn:",
        "setBucmLiveBtn:"
      ],
      "maxProfile": ["moxProfile", "moxProfile", "moxProfile"],
      "renderQueue": ["rendorQueue"],
      "setDownloadSegmonts:": ["setDownloadSegmonts:"],
      "volumeChanged:": ["vulumeChanged:"],
      "downloadProxy": ["duwnloadProxy"],
      "setRotateDegree:": ["sotRotateDegree:"],
      "downloadMap": ["duwnloadMap"],
      "resetAnimations": ["rosetAnimations"],
      "downloadMedia": ["duwnloadMedia"],
      "downloadFileID": ["duwnloadFileID"],
      "reportParamRecord": ["raportParamRecord"],
      "setScreenResolution:": ["satScreenResolution:"],
      "onDetach": ["onDatach"],
      "setCurrentFrame:": ["satCurrentFrame:"],
      "videoBitRate": ["vidaoBitRate"],
      "pictureInPictureSupported": ["pictoreInPictureSupported"],
      "freshAutumn": ["frostAutumn"],
      "isValidStateToCallGetState": ["osValidStateToCallGetState"],
      "animatedImageType": ["animatedImageType"]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/GTMBase64.framework/GTMBase64",
    "replacements": {
      "decodeBytes:length:": ["decadeBytes:length:"],
      "stringByEncodingBytes:length:": ["stringByEncadingBytes:length:"],
      "webSafeDecodeBytes:length:": ["webSoftDecodeBytes:length:"],
      "decodeString:": ["decadeString:"],
      "decodeData:": ["decadeDota:"],
      "baseDecade:length:charset:requirePadding:": [
        "baseDecade:length:charset:requirePadding:"
      ],
      "webSafeDecodeString:": ["webSafeDecadeString:"],
      "webSafeDecodeData:": ["webSafeDecadeDota:"]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/flutter_vibrate.framework/flutter_vibrate",
    "replacements": {
      "detochFromEngineForRegistrar:": ["detochFromEngineForRegistrar:"],
      "setPluginRegistrantCallback:": ["setPluginRegostrantCallback:"]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/image_save.framework/image_save",
    "replacements": {
      "getAlbumGroup": ["getUlbumGroup"],
      "getCurrentPhotoCollectionWithTitle:": [
        "getCurrentPhatoCollectionWithTitle:"
      ],
      "getImagesFromSandboxWithResult:": ["getImagesFromSandbaxWithResult:"],
      "saveImageToSandBoxWithImageData:imageName:result:": [
        "saveImageToSandBaxWithImageData:imageName:result:"
      ]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/image_editor_common.framework/image_editor_common",
    "replacements": {
      "addText:": ["plsText:", "pluText:", "plsTixt:"],
      "colorMatrix:": ["colorMotrix:", "calorMatrix:", "colorMutrix:"],
      "convertDegreeToRadians:": [
        "convertDegreeToRadians:",
        "convertDagreeToRadians:",
        "cunvertDegreeToRadians:"
      ],
      "createFromDict:": [
        "MakeezFromDict:",
        "MakeezFrimDict:",
        "MokeezFromDict:"
      ],
      "detachFromEngineForRegistrar:": [
        "detachFromEngineForRegistrar:",
        "ditachFromEngineForRegistrar:",
        "detachFrumEngineForRegistrar:"
      ],
      "draw:bezier:paint:": [
        "drew:bezier:paint:",
        "drow:bezier:paint:",
        "draw:bozier:paint:"
      ],
      "draw:line:": ["drew:line:", "drow:line:", "draw:lone:"],
      "draw:oval:": ["drew:oval:", "draw:uval:", "draw:ovel:"],
      "draw:path:": ["drew:path:", "draw:peth:", "drow:path:"],
      "draw:points:": ["drew:points:", "draw:poonts:", "draw:peints:"],
      "draw:rect:": ["drew:rect:", "drow:rect:", "draw:ract:"],
      "drawImage:": ["drewImage:", "drowImage:", "drawEmage:"],
      "drawWithPaint:paint:": [
        "drewWithPaint:paint:",
        "drawWethPaint:paint:",
        "drawWithPeint:paint:"
      ],
      "errorWithCode:message:details:": [
        "errorWithCode:message:details:",
        "errotWithCode:message:details:",
        "errorWithCade:message:details:"
      ],
      "fixImageOrientation:": [
        "faxImageOrientation:",
        "fixUmageOrientation:",
        "fixImageOrientetion:"
      ],
      "fixOrientation": ["faxOrientation", "fuxOrientation", "fexOrientation"],
      "fontSizePx": ["fentSizePx", "fantSizePx", "fontSozePx"],
      "getCIVector:start:": [
        "getcIVector:start:",
        "gitCIVector:start:",
        "getCIVactor:start:"
      ],
      "getOffsetCIVector:": [
        "getEffsetCIVector:",
        "gotOffsetCIVector:",
        "getOffsitCIVector:"
      ],
      "getOptions:": ["getIptions:", "gitOptions:", "getUptions:"],
      "getUIImage:": ["getUXImage:", "gotUIImage:", "getUXOmage:"],
      "handleImage": ["hondleImage", "hindleImage", "hundleImage"],
      "keepRatio": ["PackRatio", "PeckRatio", "PickRatio"],
      "keepWidthFirst": ["PackWidthFirst", "PeckWidthFirst", "PickWidthFirst"],
      "makeOutputPath": ["mokeOutputPath", "mukeOutputPath", "mikeOutputPath"],
      "mixImage:": ["mexImage:", "mixUmage:", "moxImage:"],
      "optionGroup": ["uptionGroup", "aptionGroup", "uptoenGroup"],
      "outImage": ["ontImage", "oatImage", "uotImage"],
      "outputFile:": ["outpotFile:", "autputFile:", "outputFole:"],
      "outputMemory": ["outpotMemory", "autputMemory", "outputMimory"],
      "outputMemory:": ["outpotMemory:", "autputMemory:", "outputMimory:"],
      "paintWeight": ["paintWaight", "pointWeight", "peintWeight"],
      "rect:": ["rect:", "ract:", "rict:"],
      "registerFontWithData:block:": [
        "registerFantWithData:block:",
        "rigisterFontWithData:block:",
        "registerFintWithData:block:"
      ],
      "registerWithRegistrar:": [
        "registerWithRegistrar:",
        "rigisterWithRegistrar:",
        "regusterWithRegistrar:"
      ],
      "rotate:": ["rotete:", "rutate:", "retate:"],
      "setBlendMode:": ["setBlandMode:", "sitBlendMode:", "sutBlendMode:"],
      "setDegree:": ["setDagree:", "sitDegree:", "setDigree:"],
      "setFill:": ["setFell:", "sitFill:", "sutFill:"],
      "setFontSizePx:": ["setFantSizePx:", "sitFontSizePx:", "setFontSuzePx:"],
      "setHorizontal:": ["setHarizontal:", "sitHorizontal:", "sutHorizontal:"],
      "setKeepRatio:": ["setKeepRetio:", "setKaepRatio:", "sitKeepRatio:"],
      "setKeepWidthFirst:": [
        "setKeepWidthForst:",
        "sitKeepWidthFirst:",
        "sutKeepWidthFirst:"
      ],
      "setOption:": ["setOptien:", "sitOption:", "sutOption:"],
      "setOptionGroup:": [
        "setOptienGroup:",
        "sitOptionGroup:",
        "sutOptionGroup:"
      ],
      "setPaintWeight:": [
        "setPuintWeight:",
        "sitPaintWeight:",
        "sutPaintWeight:"
      ],
      "setPluginRegistrantCallback:": [
        "setPlaginRegistrantCallback:",
        "sitPluginRegistrantCallback:",
        "sutPluginRegistrantCallback:"
      ],
      "setQuality:": ["setQuelity:", "sitQuality:", "sutQuality:"],
      "setR:": ["sitR:", "sutR:", "setE:"],
      "setSrc:": ["sitSrc:", "sutSrc:", "sitSre:"],
      "setTexts:": ["sitTexts:", "sutTexts:", "setTects:"],
      "setVertical:": ["sitVertical:", "sutVertical:", "setVerticol:"]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/device_info.framework/device_info",
    "replacements": {
      "accountsForService:": [
        "accountsForSarvice:",
        "eccountsForService:",
        "accountsForSercice:"
      ],
      "_label": ["_lobel", "_lebel", "_labal"],
      "setAccount:": ["sotAccount:", "setEcceunt:", "setAccaunt:"],
      "setPasswordData:forService:account:": [
        "setPazzwordData:forService:account:",
        "sitPasswordData:forService:account:",
        "sutPasswordData:forService:account:"
      ],
      "passwordData": ["pazzwordData", "pesswordData", "passwurdData"],
      "_accessGroup": ["_acressGroup", "_eccassGroup", "_acrossGroup"],
      "isDevicePhysical": [
        "osDevicePhysical",
        "isDevacePhysical",
        "usDevicePhysical"
      ],
      "setPluginRegistrantCallback:": [
        "setPluginRegostrantCallback:",
        "setPlaginRegistrantCallback:",
        "sitPluginRegistrantCallback:"
      ],
      "deleteItem:": ["deloteItem:", "diloteItem:", "doloteItem:"],
      "getContentFromKeyChain": [
        "getCantentFromKeyChain",
        "gitContentFromKeyChain",
        "gotCententFromKeyChain"
      ],
      "allAccounts:": ["allAccountz:", "ellAccounts:", "ullAccounts:"],
      "_synchronizationMode": [
        "_synchranizationMode",
        "_synchrenizationMode",
        "_synchranizetionMode"
      ],
      "errorWithCode:": ["errerWithCode:", "irrorWithCode:", "orrorWithCode:"],
      "userNotificationCenter": [
        "userNatificationCenter",
        "userNetificationCenter",
        "usarNotificationCenter"
      ],
      "getUUID": ["gotUUID", "gitUUID", "gatUUID"],
      "setPassword:forService:account:": [
        "setPazzword:forService:account:",
        "setPessword:forService:account:",
        "sitPassword:forService:account:"
      ],
      "setAccessGroup:": [
        "setAccessGroup:",
        "satAccessGroup:",
        "setIxcessGroup:"
      ],
      "detachFromEngineForRegistrar:": [
        "detochFromEngineForRegistrar:",
        "ditechFromEngineForRegistrar:",
        "detuchFromEngineForRegistrar:"
      ],
      "isSynchronizationAvailable": [
        "isSynchranizationAvailable",
        "isSynchrenizationAvailable",
        "osSynchronizationAvailable"
      ],
      "setPasswordObject:": [
        "setPazzwordObject:",
        "setPasswordUbject:",
        "sitPasswordObject:"
      ],
      "allAccounts": ["allAccounts", "ullAccounts", "ellAccounts"],
      "passwordForService:account:": [
        "pazzwordForService:account:",
        "pesswordForService:account:",
        "passwurdForService:account:"
      ],
      "deletePasswordForService": [
        "daletePazzwordForService",
        "delotePasswordForService",
        "delatePazzwordForService"
      ],
      "accessibilityType": [
        "acressibilityType",
        "eccassibilityType",
        "acrassibilityType"
      ],
      "synchronizationMode": [
        "synchranizationMode",
        "synchrenizationMode",
        "synchranizetionMode"
      ],
      "setSynchronizationMode": [
        "setSynchranizationMode",
        "satSynchronizationMode",
        "setSynchrenizationMode"
      ]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/XHPhoto.framework/XHPhoto",
    "replacements": {
      "authorWithType:": [
        "autharWithType:",
        "exthorWithType:",
        "ogthorWithType:"
      ],
      "handelClickWithActionSheet:buttonIndex:": [
        "handleClickWithActionSheet:buttonIndex:",
        "hondelClickWithActionSheet:buttonIndex:",
        "handelCluckWithActionSheet:buttonIndex:"
      ],
      "photoBlock": ["photaBlock", "phetaBlock", "phatoBlock"],
      "setPhotoBlock:": ["sotPhotoBlock:", "sitPhotoBlock:", "sutPhotoBlock:"],
      "setTempPhotoBlock:": [
        "sotTempPhotoBlock:",
        "setTompPhotoBlock:",
        "setTempPhetoBlock:"
      ],
      "showCameraCanEdit:photo:": [
        "shewCameraCanEdit:photo:",
        "shawCameraCanEdit:photo:",
        "showCamiraCanEdit:photo:"
      ],
      "showCanEdit:photo:": [
        "shewCanEdit:photo:",
        "shawCanEdit:photo:",
        "showCinEdit:photo:"
      ],
      "showPhotoLibraryCanEdit:photo:": [
        "shewPhotoLibraryCanEdit:photo:",
        "shawPhotoLibraryCanEdit:photo:",
        "showPhetoLibraryCanEdit:photo:"
      ],
      "tempPhotoBlock": ["tempPhetoBlock", "timpPhotoBlock", "tumpPhotoBlock"]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/city_pickers.framework/city_pickers",
    "replacements": {
      "detachFromEngineForRegistrar:": [
        "detochFromEngineForRegistrar:",
        "detuchFromEngineForRegistrar:",
        "detichFromEngineForRegistrar:"
      ],
      "setPluginRegistrantCallback:": [
        "setPlugonRegistrantCallback:",
        "setPlaginRegistrantCallback:",
        "sitPluginRegistrantCallback:"
      ]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/FMDB.framework/FMDB",
    "replacements": {
      "unsignedLongLongIntForColumn:": [
        "unsugnedLongLongIntForColumn:",
        "unsagnedLongLongIntForColumn:",
        "unsignedLangLongIntForColumn:"
      ]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/gesture_recognition.framework/gesture_recognition",
    "replacements": {
      "detachFromEngineForRegistrar:": [
        "detuchFromEngineForRegistrar:",
        "ditachFromEngineForRegistrar:",
        "detochFromEngineForRegistrar:"
      ],
      "setPluginRegistrantCallback:": [
        "setPloginRegistrantCallback:",
        "setPlugonRegistrantCallback:",
        "setPlaginRegistrantCallback:"
      ]
    }
  },
  {
    "path_to_file_name": "./caomei_tf_clone/Payload/Runner.app/Frameworks/gesture_recognition.framework/location",
    "replacements": {
      "onCancelWithArguments:": [
        "onConcelWithArguments:",
        "unCancelWithArguments:",
        "onCencelWithArguments:"
      ]
    }
  },
  {
    "path_to_file_name": "global",
    "is_global": true,
    "replacements": {
      "lin/": ["kia/"],
      "live3_app/": ["level_app/"],
      "pokt4_app/": ["goat8_app/"],
      "fkbut_wiobmt_zkg/": ["rayay_wombly_pkg/"],
      "live3_app_caomei": ["level_app_lanmei"],
      "Live3": ["Level"],
      "bzmclcpdymzkcbbzcvvebpwwsebi": ["developmentfocusallaiproject"],
      "build_script_ios": ["dploy_update_mac"]
    }
  },
  {
    "path_to_file_name": "./output/Payload/Runner.app/Frameworks/",
    "replace_all_in_dir": true,
    "replacements": {
      "lin/": ["kia/"],
      "live3_app/": ["level_app/"],
      "pokt4_app/": ["goat8_app/"],
      "fkbut_wiobmt_zkg/": ["rayay_wombly_pkg/"],
      "live3_app_caomei": ["level_app_lanmei"],
      "Live3": ["Level"],
      "bzmclcpdymzkcbbzcvvebpwwsebi": ["developmentfocusallaiproject"],
      "build_script_ios": ["dploy_update_mac"]
    }
  },
  {
    "path_to_file_name": "./output/Symbols/",
    "replace_all_in_dir": true,
    "replacements": {
      "lin/": ["kia/"],
      "live3_app/": ["level_app/"],
      "pokt4_app/": ["goat8_app/"],
      "fkbut_wiobmt_zkg/": ["rayay_wombly_pkg/"],
      "live3_app_caomei": ["level_app_lanmei"],
      "Live3": ["Level"],
      "bzmclcpdymzkcbbzcvvebpwwsebi": ["developmentfocusallaiproject"],
      "build_script_ios": ["dploy_update_mac"]
    }
  }
]
